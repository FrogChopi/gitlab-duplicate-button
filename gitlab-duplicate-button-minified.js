// ==UserScript==
// @name         gitlab duplicate button
// @description  a simply tool to rapidly duplicate pipeline schedule
// @match        https://gitlab.com/*/pipeline_schedules*
// @match        https://*.gitlab.com/*/pipeline_schedules*
// @grant        GM_log
// @run-at       document-end
// @author       FrogChopi
// @version      1
// @downloadURL  https://github.com/FrogChopi/gitlab-duplicate-button/blob/main/gitlab-duplicate-button.js
// ==/UserScript==

!async function(){"use strict";let e=document.createElement("style");e.innerText="\n        .modal {\n            position: fixed;\n            top: 0;\n            left: 0;\n            z-index: 1050;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            outline: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .modal-dialog {\n            position: relative;\n            width: auto;\n            margin: 0.5rem;\n            pointer-events: none;\n            max-width: 500px;\n        }\n\n        .modal-content {\n            position: relative;\n            display: flex;\n            flex-direction: column;\n            width: 100%;\n            pointer-events: auto;\n            background-color: #fff;\n            background-clip: padding-box;\n            border: 1px solid rgba(0, 0, 0, 0.2);\n            border-radius: 0.3rem;\n            outline: 0;\n        }\n\n        .modal-header {\n            display: flex;\n            align-items: flex-start;\n            justify-content: space-between;\n            padding: 1rem;\n            border-bottom: 1px solid #dee2e6;\n            border-top-left-radius: 0.3rem;\n            border-top-right-radius: 0.3rem;\n        }\n\n        .modal-title {\n            margin-bottom: 0;\n            line-height: 1.5;\n            font-size: 1.25rem;\n        }\n\n        .close {\n            float: right;\n            font-size: 1.5rem;\n            font-weight: 700;\n            line-height: 1;\n            color: #000;\n            text-shadow: 0 1px 0 #fff;\n            opacity: .5;\n            padding: 1rem;\n            margin: -1rem -1rem -1rem auto;\n            background-color: transparent;\n            border: 0;\n        }\n\n        .modal-body {\n            position: relative;\n            flex: 1 1 auto;\n            padding: 1rem;\n        }\n\n        .modal-footer {\n            display: flex;\n            flex-wrap: wrap;\n            align-items: center;\n            justify-content: flex-end;\n            padding: 0.75rem;\n            border-top: 1px solid #dee2e6;\n            border-bottom-right-radius: 0.3rem;\n            border-bottom-left-radius: 0.3rem;\n        }\n    ",document.head.appendChild(e);let n=()=>document.querySelectorAll('a[data-testid="edit-pipeline-schedule-btn"]').forEach((e=>{let n=e.href.match(/(\d+)$/)[1],t={operationName:"getPipelineSchedulesQuery",variables:{ids:[n],prevPageCursor:"",nextPageCursor:"",projectPath:window.location.pathname.match(/^(.+)\/-\/pipeline_schedules/)[1]},query:'query getPipelineSchedulesQuery($projectPath: ID!, $status: PipelineScheduleStatus, $ids: [ID!] = null, $sortValue: PipelineScheduleSort, $first: Int, $last: Int, $prevPageCursor: String = "", $nextPageCursor: String = "") {\n  currentUser {\n    id\n    username\n    __typename\n  }\n  project(fullPath: $projectPath) {\n    id\n    projectPlanLimits {\n      ciPipelineSchedules\n      __typename\n    }\n    pipelineSchedules(\n      status: $status\n      ids: $ids\n      sort: $sortValue\n      first: $first\n      last: $last\n      after: $nextPageCursor\n      before: $prevPageCursor\n    ) {\n      count\n      nodes {\n        id\n        description\n        cron\n        cronTimezone\n        ref\n        forTag\n        editPath\n        refPath\n        refForDisplay\n        lastPipeline {\n          id\n          detailedStatus {\n            id\n            group\n            icon\n            label\n            text\n            detailsPath\n            __typename\n          }\n          __typename\n        }\n        active\n        nextRunAt\n        realNextRun\n        owner {\n          id\n          username\n          avatarUrl\n          name\n          webPath\n          __typename\n        }\n        variables {\n          nodes {\n            id\n            variableType\n            key\n            value\n            __typename\n          }\n          __typename\n        }\n        userPermissions {\n          playPipelineSchedule\n          updatePipelineSchedule\n          adminPipelineSchedule\n          __typename\n        }\n        __typename\n      }\n      pageInfo {\n        ...PageInfo\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfo on PageInfo {\n  hasNextPage\n  hasPreviousPage\n  startCursor\n  endCursor\n  __typename\n}\n'};var a=document.createElement("BUTTON"),i=document.createElement("IMG");a.className="btn btn-default btn-md gl-button btn-icon",i.className="gl-button-icon gl-icon s16 gl-fill-current",i.src="https://cdn-icons-png.flaticon.com/512/1621/1621635.png",a.appendChild(i),a.id=n,a.title="Duplicate scheduled pipeline",a.ariaLabel="Duplicate scheduled pipeline",a.onclick=async()=>{let e=await async function(e){return new Promise(((t,a)=>{let i=document.location.host;JSON.stringify(e),fetch(`https://${i}/api/v4/projects/${+document.body.getAttribute("data-project-id")}/pipeline_schedules/${n}`,{method:"GET",credentials:"include",headers:{Accept:"application/json"}}).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()})).then((e=>{console.log("Succès:",e),t(e)})).catch((e=>{console.error("Erreur:",e),a(e)}))}))}(t),a=document.createElement("DIV");a.innerHTML=`\n                  <div class="modal" tabindex="-1" role="dialog">\n            <div class="modal-dialog" role="document">\n                <div class="modal-content">\n                <div class="modal-header">\n                    <h5 class="modal-title">Modal title</h5>\n                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">&times;</span>\n                    </button>\n                </div>\n                <div class="modal-body">\n                    <h5>New schedule name</h5>\n                    <div class="input-group mb-3">\n                        <div class="input-group-prepend">\n                            <span class="input-group-text" id="basic-addon1">@</span>\n                        </div>\n                        <input type="text" class="form-control" placeholder="New schedule name" aria-label="New schedule name" value="${e.description}" aria-describedby="basic-addon1">\n                    </div>\n                    <h6>Are you sure you want to duplicate this scheduled pipeline?</h6>\n                </div>\n                <div class="modal-footer">\n                    <button type="button" aria-label="Duplicate" class="btn btn-primary">Duplicate scheduled pipeline</button>\n                    <button type="button" aria-label="Cancel" class="btn btn-secondary" data-dismiss="modal">Cancel</button>\n                </div>\n                </div>\n            </div>\n            </div>\n            `,a.querySelector('button[aria-label="Close"]').onclick=()=>a.remove(),a.querySelector('button[aria-label="Cancel"]').onclick=()=>a.remove(),a.querySelector('button[aria-label="Duplicate"]').onclick=async()=>{a.querySelector('input[aria-label="New schedule name"]').value==e.description?alert("The new schedule name can't be the same !"):(await async function(e,n,t,a){return new Promise(((i,o)=>{const r=`/api/v4/projects/${document.body.getAttribute("data-project-id")}/pipeline_schedules`,l={description:e,ref:n,cron:t,cron_timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,active:!1,variables:a};return fetch(r,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":document.querySelector('meta[name="csrf-token"]').content},credentials:"same-origin",body:JSON.stringify(l)}).then((e=>{i(e)})).catch((e=>{o(e)}))}))}(a.querySelector('input[aria-label="New schedule name"]').value,e.ref,e.cron,e.variables),window.location.reload())},document.body.appendChild(a)},e.parentNode.insertBefore(a,e.parentNode.lastChild)}));var t;await(t='a[data-testid="edit-pipeline-schedule-btn"]',new Promise((e=>{const a=new MutationObserver((i=>{document.querySelector(t)&&"function"==typeof $&&(n(),e(document.querySelector(t)),a.disconnect())}));a.observe(document.body,{childList:!0,subtree:!0})})))}();